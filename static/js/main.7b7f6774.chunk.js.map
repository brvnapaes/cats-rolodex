{"version":3,"sources":["components/Card/index.js","components/CardList/index.js","components/SearchBox/index.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","cat","id","username","name","CardList","cats","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredCats","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAGcA,EAAO,SAACC,GACjB,OACG,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,MAAMC,IAAG,+BAA0BH,EAAMI,IAAIC,GAApC,eAClB,yCAAYL,EAAMI,IAAIE,SAAtB,OACA,6CAAgBN,EAAMI,IAAIG,YCJzBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,KAAKC,KAAI,SAAAN,GAAG,OAClB,cAAC,EAAD,CAAmBA,IAAKA,GAAbA,EAAIC,UCNlBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCoCjEG,G,wDAjCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CACXb,KAAM,GACNU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC7EF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,KAAMkB,S,oBAOvC,WAAW,IAAD,EAEsBC,KAAKN,MAA3Bb,EAFA,EAEAA,KAAMU,EAFN,EAEMA,YACRU,EAAepB,EAAKqB,QAAO,SAAA1B,GAAG,OAAIA,EAAIE,SAASyB,cAAcC,SAASb,EAAYY,kBAExF,OACE,sBAAK9B,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CAAWW,YAAY,SAASC,aAAce,KAAKf,eACnD,cAAC,EAAD,CAAUJ,KAAMoB,W,GA7BNI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7b7f6774.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\n export const Card = (props) => {\r\n     return (\r\n        <div className='card-container'>\r\n            <img alt='cat' src={`https://robohash.org/${props.cat.id}?set=set4`} />\r\n            <h2> Nome: {props.cat.username} </h2>\r\n            <h3>Humano(a): {props.cat.name}</h3>\r\n        </div>\r\n     )\r\n }","import React from 'react';\r\nimport './CardList.css';\r\nimport { Card } from '../Card/index';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                props.cats.map(cat => (\r\n                <Card key={cat.id} cat={cat}/>\r\n                ))\r\n            }    \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange}/>\r\n);","import React, { Component } from 'react';\nimport { CardList } from './components/CardList';\nimport { SearchBox } from './components/SearchBox';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      cats: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\n    .then(users => this.setState({ cats: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render () {\n\n    const { cats, searchField } = this.state;\n    const filteredCats = cats.filter(cat => cat.username.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n        <h1>Cats Rolodex</h1>\n        <SearchBox placeholder='Buscar' handleChange={this.handleChange} />\n        <CardList cats={filteredCats} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}